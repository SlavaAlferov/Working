def reverse_byte(num):
    """
    Проверяет и переворачивает 8-битное целое число со знаком.

    :param num: Целое число для переворота
    :return: Перевернутое значение или сообщение "no solution"
    """
    # Проверяем, находится ли число в диапазоне 8-битных целых со знаком
    if num < -128 or num > 127:
        return "no solution"
    
    # Преобразуем число в двоичное представление без знака
    if num < 0:
        num = (1 << 8) + num  # Преобразуем отрицательное число в его 8-битное представление
    
    # Переворачиваем 8-битное представление числа
    reversed_num = 0
    for _ in range(8):
        reversed_num = (reversed_num << 1) | (num & 1)  # Сдвигаем влево и добавляем младший бит
        num >>= 1  # Сдвигаем вправо исходное число
    
    # Приводим к знаковому виду и проверяем диапазон
    if reversed_num > 127:
        reversed_num -= (1 << 8)  # Преобразуем обратно в отрицательное, если необходимо

    # Проверяем, не выходит ли за пределы диапазона
    if reversed_num < -128 or reversed_num > 127:
        return "no solution"

    return reversed_num

# Примеры использования функции
print(reverse_byte(12))    # Вывод: 21
print(reverse_byte(123))   # Вывод: "no solution"
print(reverse_byte(-150))  # Вывод: -51
